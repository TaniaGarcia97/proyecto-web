ALUMNO B --> Alexis

1. Configuración inicial:

git clone git@github.com:TaniaGarcia97/proyecto-web.git
cd proyecto-web/ #Clonación del repositorio previamente creado por ALUMNO A (Tania)
git pull origin main #Para asegurarnos de que estén todos los ficheros

2. Estructura básica del proyecto:

--

3. Creación de ramas para nuevas funcionalidades:

git branch footer #Creamos la rama footer
git checkout footer #Nos cambiamos a la rama footer
git branch #Nos aseguramos de que estamos en la rama footer
    * footer
    main

git add .
git commit -m “Creación del footer”
git push origin footer

4. Desarollo simultáneo:

#Desarrollo del fichero index.html y creación de estilos.css
git add . #Añadimos todos los ficheros para subir en la rama footer
git commit -m "Modificación de footer y creación de estilos"
git push origin footer #Actualizamos la rama footer en Github

5. Revisión y fusión de cambios, 6. Resolución de conflictos, 7. Actualización de la rama main

git checkout main #Cambiamos a la rama main
git pull origin footer #Traemos el contenido que presenta footer
git push origin main #Obtenemos errores, ya que existen conflictos. Antes de continuar, debemos agregar una instrucción
git config pull.rebase false #Instrucción necesaria para poder fusionar las ramas y posteriormente solucionar los conflictos, sin perder contenido
git pull origin main
git add .
git commit -m "fusión"
git push origin main #Debemos resolver los conflictos encontrados, y repetir el proceso para finalmente fusionar el contenido y publicarlo en Github
git add .
git commit -m "Resolución de conflictos"
git push origin main #Finalmente se cuelga sin errores.

#Hemos decidido hacer una fusión del contenido de main a header y footer, respectivamente.
git checkout footer
git pull origin main
git push origin footer #El footer está actualizado, tal como está main


ALUMNO A --> Tania

1. Configuración inicial

Se crea el repositorio y se añade como colaborador a ALUMNO B

git clone git@github.com:TaniaGarcia97/proyecto-web.git # Con esto clono el repositorio en mi ordenador local

cd proyecto-web # Para acceder a la carpeta del repositorio

echo "# proyecto-web" >> README.md # Para agregar el archivo README.md

2. Estructura Básica del Proyecto

touch index.html # Para crear el archivo
En este archivo creamos la estructura de html 

git add . # Para agregar tanto el README

git commit -m "Agregar estructura básica de index.html" # Agregamos un comentario para saber que mi usuario hizo el index.html

git push origin main # Con este comando subo los cambios del local al repositorio a la rama main

git commit -m "creada estructura básica de index.html" # Como modificamos la estructura volvemos a crear otro comentario

git push origin main # Con este comando subo los cambios del local al repositorio a la rama main

3. Creación de ramas para nuevas funcionalidades

git branch header #Se crea la rama "header"
git checkout header #Se cambia de la rama "main" a la "header"

4. Desarrollo simultáneo

git add index.html # Añadimos el archivo index.html a la rama header

git commit -m "creado el header" # Hacemos un comentario para saber que hemos creado la rama header 

touch estilos.css #Para crear el archivo de estilos

git add . #Para subir todos los cambios

git commit -m "creado el css estilos.css" #Comentamos una vez creado el archivo css

git push origin header #Para subir los cambios al header

git checkout main #Cambiamos al repositorio "main"

5. Revisión y Fusión de Cambios

git pull origin header #Nos traemos los cambios del "header" al "main"

git checkout header #Nos cambiamos a la rama "header"

git pull origin main #Para traer los cambios al header desde main

git push origin header 
